generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  role          UserRole        @default(USER)
  emailVerified DateTime?
  image         String?
  accounts      Account[]
 
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model Customer {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  email     String    @unique
  image_url String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  invoices  Invoice[]
}

model Invoice {
  id          String        @id @default(uuid()) @db.Uuid
  customer_id String        @db.Uuid
  amount      Float
  date        DateTime
  status      InvoiceStatus
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  customer    Customer      @relation(fields: [customer_id], references: [id])
}

model Revenue {
  id      String @id @default(uuid()) @db.Uuid
  month   String
  revenue Float
}

enum InvoiceStatus {
  pending
  paid
}
enum UserRole {
  USER
  ADMIN
}

model VerificationToken {
  id        String @id @default(uuid()) @db.Uuid()
  token     String @unique
  email     String @unique
  exprire   DateTime

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
model ForgetPasswordToken {
  id        String @id @default(uuid()) @db.Uuid()
  token     String @unique
  email     String @unique
  exprire   DateTime

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}